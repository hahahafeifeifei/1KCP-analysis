configfile: 'config.yaml'

# Load the list of samples from the sample list file
with open(config['sample_list_file']) as f:
    samples_list = [line.strip() for line in f if line.strip()]

include: 'rules/graph_construction.smk'
include: 'rules/graph_filtering.smk'
include: 'rules/graph_annotation.smk'

wildcard_constraints:
    sample='|'.join(samples_list),
    haplotype='hap1|hap2'

rule all:
    input:
        gfas=lambda wildcards: expand(
            "results/subgraph/subgraph_{id}/minigraph_{id}.seqwish.smoothxg.gfaffix.clip.kmer.chop.ids.gfa",
            id=glob_wildcards(f"{checkpoints.minigraph_aln_partition.get(**wildcards).output[0]}/minigraph_{{id}}.gfa").id
        ),
        ref="results/gfa_grch38.list",
        node_annos=lambda wildcards: expand(
            "results/subgraph/subgraph_{id}/minigraph_{id}.seqwish.smoothxg.gfaffix.clip.kmer.chop.ids.node.anno",
            id=glob_wildcards(f"{checkpoints.minigraph_aln_partition.get(**wildcards).output[0]}/minigraph_{{id}}.gfa").id
        ),
        anno="results/merge.seqwish.smoothxg.gfaffix.clip.kmer.chop.ids.node.anno"