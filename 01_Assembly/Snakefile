configfile: 'config.yaml'

# Load the list of samples from the sample list file
with open(config['sample_list_file']) as f:
    samples_list = [line.strip() for line in f if line.strip()]

include: 'rules/assembly.smk'
include: 'rules/annotation.smk'
include: 'rules/assessment.smk'

wildcard_constraints:
    sample='|'.join(samples_list),
    haplotype='hap1|hap2'

rule all:
    input:
        expand('results/{sample}/{sample}.{haplotype}.fasta', sample=samples_list, haplotype=["hap1","hap2"]),
        expand('results/{sample}/{sample}.{haplotype}.repeatmasker.out', sample=samples_list, haplotype=["hap1","hap2"]),
        expand('results/{sample}/{sample}.{haplotype}.repeatmasker.bed', sample=samples_list, haplotype=["hap1","hap2"]),
        expand('results/{sample}/{sample}.{haplotype}.trf.dat.gz', sample=samples_list, haplotype=["hap1","hap2"]),
        expand('results/{sample}/{sample}.{haplotype}.trf.bed', sample=samples_list, haplotype=["hap1","hap2"]),
        expand('results/{sample}/{sample}.{haplotype}.liftoff.gff_polished', sample=samples_list, haplotype=["hap1","hap2"]),
        expand('results/{sample}/{sample}.{haplotype}.stringtie.annotated.gtf', sample=samples_list, haplotype=["hap1","hap2"]),
        expand('results/{sample}/{sample}.{haplotype}.gene.bed', sample=samples_list, haplotype=["hap1","hap2"]),
        expand('results/{sample}/{sample}.{haplotype}.sei.bed', sample=samples_list, haplotype=["hap1","hap2"]),
        expand('results/{sample}/{sample}.{haplotype}.type.final.bed', sample=samples_list, haplotype=["hap1","hap2"]),
        expand("results/{sample}/{sample}.merqury/{sample}.merqury.qv", sample=samples_list),
        expand("results/{sample}/{sample}.{haplotype}.inspector/summary_statistics", sample=samples_list, haplotype=["hap1","hap2"])

